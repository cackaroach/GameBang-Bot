CREATE TABLE users (
	id BIGSERIAL PRIMARY KEY,
	date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE SEQUENCE user_points_id START WITH 1;

CREATE TABLE user_points (
	id INTEGER PRIMARY KEY DEFAULT NEXTVAL('user_points_id'),
	user_id BIGSERIAL REFERENCES users(id) ON DELETE CASCADE NOT NULL,
	point INTEGER NOT NULL,
	reason VARCHAR(100) NOT NULL,
	date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE SEQUENCE lol_teams_id START WITH 1;

CREATE TABLE lol_teams (
	id INTEGER PRIMARY KEY DEFAULT NEXTVAL('lol_teams_id'),
	name VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE matches (
	id BIGSERIAL PRIMARY KEY,
	team1 INTEGER REFERENCES lol_teams(id) ON DELETE CASCADE NOT NULL,
	team2 INTEGER REFERENCES lol_teams(id) ON DELETE CASCADE NOT NULL CHECK(team1 != team2),
	is_betable BOOLEAN NOT NULL DEFAULT TRUE,
	win INTEGER REFERENCES lol_teams(id) ON DELETE CASCADE DEFAULT NULL,
	date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE SEQUENCE user_bets_id START WITH 1;
CREATE TABLE user_bets (
	id INTEGER PRIMARY KEY DEFAULT NEXTVAL('user_bets_id'),
	user_id BIGSERIAL REFERENCES users(id) ON DELETE CASCADE NOT NULL,
	match_id BIGSERIAL REFERENCES matches(id) ON DELETE CASCADE NOT NULL,
	team_id INTEGER REFERENCES lol_teams(id) ON DELETE CASCADE NOT NULL,
	point INTEGER NOT NULL CHECK(point > 0),
	earned INTEGER,
	date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE VIEW users_wp AS
	SELECT users.id, coalesce(sum(point), 0) AS point, users.date 
	FROM users LEFT JOIN user_points ON users.id = user_points.user_id GROUP BY users.id;